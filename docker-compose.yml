services:
  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: hope-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - /etc/letsencrypt:/etc/letsencrypt:ro
    restart: unless-stopped
    networks:
      - hope-network
    depends_on:
      - backend-api

  # 后端 API 服务
  backend-api:
    image: registry.cn-hangzhou.aliyuncs.com/maxotm/hope:latest
    container_name: hope-go-api
    ports:
      - "8080:8080"
      - "8090:8090"
    environment:
      - TZ=UTC
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/app.yaml:/app/app.yaml
    restart: unless-stopped
    networks:
      - hope-network
    command: ["api"]
    depends_on:
      - redis
      - mysql

  # 后端 Job 服务
  backend-job:
    image: registry.cn-hangzhou.aliyuncs.com/maxotm/hope:latest
    container_name: hope-go-job
    environment:
      - TZ=UTC
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/app.yaml:/app/app.yaml
    restart: unless-stopped
    networks:
      - hope-network
    command: ["job"]
    depends_on:
      - redis
      - mysql

  # Redis 服务（生产不要对外暴露6379端口）
  redis:
    image: redis:7-alpine
    container_name: hope-redis
    ports:
      - "6379:6379"
    environment:
      - TZ=UTC
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - hope-network
    command: sh -c "redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}"

  # MySQL 服务（生产不要对外暴露3306端口）
  mysql:
    image: mysql:8.0
    container_name: hope-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root123}
      - MYSQL_DATABASE=${DB_DATABASE:-hope}
      - MYSQL_USER=${DB_USER:-hope}
      - MYSQL_PASSWORD=${DB_PASSWORD:-change_me}
      - TZ=UTC
    volumes:
      - mysql-data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - hope-network
    command: --default-authentication-plugin=caching_sha2_password

networks:
  hope-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  mysql-data:
    driver: local
